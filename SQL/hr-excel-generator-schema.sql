-- 
-- Script was generated by Devart dbForge Studio 2020 for MySQL, Version 9.0.567.0
-- Product Home Page: http://www.devart.com/dbforge/mysql/studio
-- Script date 3/30/2022 3:58:19 PM
-- Source server version: 5.7.29
-- Source connection string: User Id=root;Host=127.0.0.1;Protocol=Ssh;Character Set=utf8;SSH Host=192.168.150.111;SSH Port=22;SSH User=root;SSH Authentication Type=Password
-- Target server version: 5.7.29
-- Target connection string: User Id=root;Host=127.0.0.1;Protocol=Ssh;Character Set=utf8;SSH Host=192.168.150.111;SSH Port=22;SSH User=root;SSH Authentication Type=Password
-- Run this script against `hr-excel-generetor-DEV` to synchronize it with `hr-excel-generator`
-- 

--
-- Disable foreign keys
--
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

SET NAMES 'utf8';

--
-- Set default database
--
CREATE DATABASE IF NOT EXISTS `hr-excel-generetor-DEV`;

USE `hr-excel-generetor-DEV`;

--
-- Create table `users`
--
CREATE TABLE users (
  user_id INT(11) NOT NULL AUTO_INCREMENT,
  user_fname VARCHAR(31) DEFAULT NULL,
  user_sname VARCHAR(31) DEFAULT NULL,
  PRIMARY KEY (user_id)
)
ENGINE = INNODB,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci;

--
-- Create table `jira_project`
--
CREATE TABLE jira_project (
  jira_id INT(11) NOT NULL,
  project_name VARCHAR(255) DEFAULT NULL
)
ENGINE = INNODB,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci;

--
-- Create index `UK_jira_project_jira_id` on table `jira_project`
--
ALTER TABLE jira_project 
  ADD UNIQUE INDEX UK_jira_project_jira_id(jira_id);

--
-- Create table `issues`
--
CREATE TABLE issues (
  issue_id INT(11) NOT NULL,
  issue_summary VARCHAR(255) DEFAULT NULL,
  project_id INT(11) DEFAULT NULL,
  PRIMARY KEY (issue_id)
)
ENGINE = INNODB,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci;

--
-- Create foreign key
--
ALTER TABLE issues 
  ADD CONSTRAINT FK_issues_project_id FOREIGN KEY (project_id)
    REFERENCES jira_project(jira_id) ON DELETE NO ACTION;

--
-- Create table `issues_task_log`
--
CREATE TABLE issues_task_log (
  task_id INT(11) NOT NULL AUTO_INCREMENT,
  user_id INT(11) DEFAULT NULL,
  issue_id INT(11) DEFAULT NULL,
  timeworked FLOAT DEFAULT NULL,
  date DATETIME DEFAULT NULL,
  PRIMARY KEY (task_id)
)
ENGINE = INNODB,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci;

--
-- Create foreign key
--
ALTER TABLE issues_task_log 
  ADD CONSTRAINT FK_issues_task_log_issue_id FOREIGN KEY (issue_id)
    REFERENCES issues(issue_id) ON DELETE NO ACTION;

--
-- Create foreign key
--
ALTER TABLE issues_task_log 
  ADD CONSTRAINT FK_issues_task_log_user_id FOREIGN KEY (user_id)
    REFERENCES users(user_id) ON DELETE NO ACTION;

DELIMITER $$

--
-- Create function `FN_GetUsserIssues`
--
CREATE FUNCTION FN_GetUsserIssues(UserID int, StartDate datetime, EndDate datetime)
  RETURNS JSON
BEGIN
  DECLARE Data json;
  DECLARE Response json;
  
  DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
     GET DIAGNOSTICS CONDITION 1 @msg = MESSAGE_TEXT;
     RETURN JSON_OBJECT('Status', 500, 'Description', @MSG);
    END;
  SET Data =IFNULL((SELECT JSON_ARRAYAGG(TaskList) FROM
    (SELECT 
      JSON_OBJECT(
        'issue_id', i.issue_id, 
        'issue_summary', i.issue_summary,
        'project_name', jp.project_name,
        'TaskList', JSON_ARRAYAGG(
      JSON_OBJECT(
        'task_id', itl.task_id,
        'logMonth', MONTH(itl.date),
        'logDay', DAY(itl.date),
        'logYear', YEAR(itl.date),
        'timeworked',itl.timeworked
      ))) AS TaskList
    FROM issues_task_log itl 
    INNER JOIN issues i ON itl.issue_id = i.issue_id
    INNER JOIN jira_project jp ON i.project_id = jp.jira_id 
    WHERE itl.user_id = 1 AND itl.date > StartDate AND itl.date < EndDate
    GROUP BY i.issue_id 
    ) AS issueList), JSON_OBJECT());

  SET Response = JSON_OBJECT(
    'Data', Data,
    'Status', 200,
    'Description', 'OK');

  RETURN Data;
END
$$

--
-- Create function `FN_GetJiraAttendanceData`
--
CREATE FUNCTION FN_GetJiraAttendanceData(StartDate datetime, EndDate datetime)
  RETURNS JSON
BEGIN
  DECLARE Data json;
  DECLARE Response json;
  DECLARE JiraAttendanceData json; 
  DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
     GET DIAGNOSTICS CONDITION 1 @msg = MESSAGE_TEXT;
     RETURN JSON_OBJECT('Status', 500, 'Description', @MSG);
    END;

  IF EndDate IS NULL THEN
    SET EndDate = NOW();
  END IF;
  IF StartDate IS NULL THEN
    set StartDate = DATE_SUB(EndDate, INTERVAL 30 DAY);
  END IF;
  SET Data = IFNULL((SELECT 
  JSON_OBJECTAGG(
    CONCAT(u.user_fname, '.', u.user_sname), FN_GetUsserIssues(u.user_id, StartDate, EndDate)
    )
    FROM users u
  ), JSON_OBJECT());

  SET Response = JSON_OBJECT(
    'Data', Data,
    'StartDate', StartDate,
    'EndDate', EndDate,
    'Status', 200,
    'Description', 'OK');
  RETURN Response;
END
$$

DELIMITER ;

--
-- Enable foreign keys
--
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;